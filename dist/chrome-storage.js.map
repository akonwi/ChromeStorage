{"version":3,"sources":["src/index.js"],"names":[],"mappings":"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","file":"src/index.js","sourcesContent":["'use strict'\n\nconst version = { value: '1.0.1' }\n\nexport const LOCAL = \"local\"\nexport const SYNC = \"sync\"\n\nexport function create(type=null) {\n  const {runtime} = chrome\n  let storage = null\n\n  if (type === null) throw new Error(\"Please specify which type of storage to use. (local or sync)\")\n  if (type === LOCAL)\n    storage = chrome.storage.local\n  else if (type === SYNC)\n    storage = chrome.storage.sync\n\n  let ChromeStorage = {}\n  Object.defineProperties(ChromeStorage, {\n    _VERSION: version,\n\n    /**\n    * @param callback to run when data changes\n    *   function(changes) {}\n    */\n    onChange: {\n      value(listener) {\n        chrome.storage.onChanged.addListener(listener)\n      }\n    },\n\n    /**\n    * @param callback to remove from data changes\n    */\n    unsubscribe: {\n      value(listener) {\n        chrome.storage.onChanged.removeListener(listener)\n      }\n    },\n\n    /**\n    * Save something\n    *\n    * @param key String key name\n    * @param val Any object to save with key\n    */\n    set: {\n      value(key, val) {\n        let toSave = { [key]: val }\n        return new Promise((resolve, reject) => {\n          storage.set(toSave, () => {\n            if (runtime.lastError)\n            return reject(runtime.lastError)\n            resolve(val)\n          })\n        })\n      }\n    },\n\n    /**\n    * Retrieve data\n    *\n    * @param key String of key or Array of keys to retrieve\n    *   If given one key, it resolves to just the value\n    *   If given an array of keys, it resolves to an object with key/value pairs\n    */\n    get: {\n      value(key) {\n        return new Promise((resolve, reject) => {\n          storage.get(key, (results) => {\n            if (runtime.lastError) return reject(runtime.lastError)\n            if (key.trim !== undefined) results = results[key]\n            resolve(results)\n          })\n        })\n      }\n    },\n\n    /**\n    * Retrieve total collection\n    *\n    * resolves to an object with key/value pairs\n    */\n    all: {\n      value() {\n        return new Promise((resolve, reject) => {\n          storage.get(null, (items) => {\n            if (runtime.lastError) return reject(runtime.lastError)\n            resolve(items)\n          })\n        })\n      }\n    },\n\n    /**\n    * Delete data at a key\n    *\n    * @param key String of key\n    */\n    remove: {\n      value(key) {\n        if (key === undefined)\n        throw new Error(\"No keys given to remove\")\n        return new Promise((resolve, reject) => {\n          storage.remove(key, () => {\n            if (runtime.lastError)\n            return reject(runtime.lastError)\n            resolve()\n          })\n        })\n      }\n    }\n  })\n  return Object.preventExtensions(ChromeStorage)\n}\n"]}